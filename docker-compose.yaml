version: "3.4"

networks:
  mikro:
    driver: bridge

services:
  # Eureka Server
  eurekaserver:
    container_name: eurekaserver
    build: eureka_service
    environment:
      EUREKA_PORT: "${EUREKA_PORT}"
    ports:
      - "${EUREKA_PORT}:${EUREKA_PORT}"
    networks:
      - mikro

  # Resource service
  sc_resource:
    container_name: sc_resource
    build: resource_service
    environment:
      SC_RESOURCE_PORT: "${SC_RESOURCE_PORT}"
      SC_RESOURCE_DB_HOST: db_resource
      SC_RESOURCE_DB_PORT: 3306 # default mysql port
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      SC_DB_RETRY_COUNT: 3
      EUREKA_HOST: "${EUREKA_HOST}"
      EUREKA_PORT: "${EUREKA_PORT}"
    ports:
      - "${SC_RESOURCE_PORT}:${SC_RESOURCE_PORT}"
    networks:
      - mikro
    restart: on-failure
    depends_on:
      db_resource:
        condition: service_started
      eurekaserver:
        condition: service_started

  # Database that contains resource data, used by the resource service
  db_resource:
    container_name: db_resource
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    volumes:
      - "./scripts/mysql_prepare_resource.sql:/docker-entrypoint-initdb.d/1.sql"
    networks:
      - mikro

  # Song service
  sc_song:
    container_name: sc_song
    build: song_service
    environment:
      SC_SONG_PORT: "${SC_SONG_PORT}"
      SC_SONG_DB_HOST: db_song
      SC_SONG_DB_PORT: 3306 # default mysql port
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      SC_DB_RETRY_COUNT: 3
      EUREKA_HOST: "${EUREKA_HOST}"
      EUREKA_PORT: "${EUREKA_PORT}"
    ports:
      - "${SC_SONG_PORT}:${SC_SONG_PORT}"
    restart: on-failure
    networks:
      - mikro
    depends_on:
      db_song:
        condition: service_started
      eurekaserver:
        condition: service_started

  # Database that contains songs data, used by the song service
  db_song:
    container_name: db_song
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    volumes:
      - "./scripts/mysql_prepare_song.sql:/docker-entrypoint-initdb.d/1.sql"
    networks:
      - mikro
